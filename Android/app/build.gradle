buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
}

apply plugin: 'com.android.application'

project.ext.modelAssetsDir = new File((File) project.buildDir, '../src/main/assets')

def getIP() {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    return properties.getProperty("ipaddress");
}


android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'

    flavorDimensions 'default'

    defaultConfig {
        applicationId 'com.wearnotch.notchdemo.tutorial'
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 9
        versionName '1.8'

        multiDexEnabled true

        buildConfigField "String", "IPADDRESS", "\""+getIP()+"\""

    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
    }

    lintOptions {
        abortOnError false
    }
}

configurations {
    appConfig
}

dependencies {
    implementation 'com.notch.sdk:sdk-android:1.1.355'
    appConfig 'com.notch.sdk:sdk-android:1.1.355'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'org.greenrobot:eventbus:3.0.0'

    implementation 'com.jakewharton:butterknife:10.2.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.0'
    implementation "androidx.multidex:multidex:2.0.1"
    implementation 'com.afollestad.material-dialogs:core:2.8.1'

    implementation 'io.socket:socket.io-client:1.0.0'
    implementation 'com.github.nkzawa:socket.io-client:0.6.0'

    implementation 'com.illposed.osc:javaosc-core:0.3'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
}

task convertObj(type: JavaExec) {
    ext.srcFile1 = file('../model/equipment_tutorial.obj')
    ext.srcFile2 = file('../model/equipment_tutorial.js')
    inputs.files files(srcFile1,srcFile2)
    outputs.dir project.modelAssetsDir

    main = 'com.wearnotch.visualiserutil.ObjConverter'
    classpath = configurations.appConfig
    args = [ srcFile1.getAbsolutePath(), srcFile2.getAbsolutePath(),
             new File((File) project.modelAssetsDir, 'equipment.dat').getAbsolutePath() ]
}

task convertMtl(type: JavaExec) {
    ext.srcFile = file('../model/equipment_tutorial.mtl')
    inputs.file srcFile
    outputs.dir project.modelAssetsDir

    main = 'com.wearnotch.visualiserutil.MtlConverter'
    classpath = configurations.appConfig
    args = [ srcFile.getAbsolutePath(),
             new File((File) project.modelAssetsDir, 'equipment_mtl.dat').getAbsolutePath() ]
}

project.afterEvaluate {
    project.tasks.findAll {
        it.name.startsWith('generate') && it.name.endsWith('Assets')
    }.each {
        it.dependsOn convertObj
        it.dependsOn convertMtl
    }
}


